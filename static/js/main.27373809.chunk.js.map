{"version":3,"sources":["store/ducks/auth/types.js","store/ducks/initialState.js","store/ducks/auth/index.js","store/ducks/tasks/types.js","store/ducks/tasks/index.js","store/ducks/edit/types.js","store/ducks/edit/index.js","store/ducks/rootReducer.js","store/index.js","components/CustomHeader/index.js","components/CustomMessage/index.js","components/LoginForm/index.js","components/NavBar/index.js","components/SignUpForm/index.js","store/ducks/tasks/actions.js","components/TaskCard/index.js","components/TaskForm/index.js","components/TaskGroup/index.js","components/EditTaskForm/index.js","pages/Home/index.js","pages/Login/index.js","store/ducks/auth/actions.js","pages/SignUp/index.js","pages/Tasks/index.js","pages/Donation/index.js","pages/Contacts/index.js","pages/Edit/index.js","routes/PrivateRoute.js","routes/index.js","App.js","index.js"],"names":["AuthTypes","auth","usersList","name","email","password","currentUser","isLogged","edit","id","uuidv4","title","subtitle","description","tasks","INITIAL_STATE","initialState","authReducer","state","action","type","signedUser","find","user","payload","TasksTypes","tasksReducer","filter","EditTypes","editReducer","combineReducers","store","createStore","rootReducer","CustomHeader","message","Header","as","color","textAlign","CustomMessage","children","Message","LoginForm","formData","onInputChange","onSubmit","Form","size","Segment","stacked","Input","fluid","icon","value","iconPosition","placeholder","onChange","event","Button","onClick","NavBar","handleItemClick","e","path","props","history","push","Menu","Container","text","Item","this","position","primary","Component","SiginUpForm","addTask","task","mapDispatchToProps","deleteTask","connect","Card","Content","Image","floated","src","Meta","Description","extra","className","basic","location","href","TaskForm","TextArea","TaskGroup","Group","map","EditTaskForm","Home","style","width","marginTop","Icon","Login","handleInputChange","target","setState","handleSubmit","signIn","some","Grid","height","verticalAlign","Column","maxWidth","to","SignUp","signUp","SignUpForm","Tasks","tasksAction","Donation","Contacts","users","getUsers","bind","handleUserClick","login","window","confirm","assign","FETCH_SINCE","Math","random","endpoint","fetch","response","json","data","console","log","avatar_url","Edit","logOut","component","rest","render","onLogOut","Routes","exact","isPrivate","App","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.27373809.chunk.js","sourcesContent":["export const AuthTypes = {\n  SIGNIN: \"auth/SIGNIN\",\n  SIGNUP: \"auth/SIGNUP\",\n  LOGOUT: \"auth/LOGOUT\"\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  auth: {\n    usersList: [\n      {\n        name: \"admin\",\n        email: \"admin@gmail.com\",\n        password: \"admin123\"\n      }\n    ],\n    currentUser: {},\n    isLogged: false,\n  },\n  edit: {\n    id: uuidv4(),\n    title: '',\n    subtitle: '',\n    description: '',\n  },\n  tasks: [\n    {\n      id: uuidv4(),\n      title: \"Visit to the LVVR - Lar dos Velhinhos de Volta Redonda\",\n      subtitle: \"Oportunity to share atention and love\",\n      description:\n        \"Take a few hours to share attention and love with those who have dedicated their lives to our society\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Blood donation effort at São João Batista hospital\",\n      subtitle: \"Help us to save lifes\",\n      description:\n        \"Right now to many people who need your help to stay with us\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Distribution of basic food baskets in the Agua limpa neighborhood\",\n      subtitle: \"Let's take food to our neighbors\",\n      description:\n        \"We need your help to buy and deliver food to people in a vulnerable state\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Garbage collection on the banks of the Paraiba do Sul river \",\n      subtitle: \"Let`s keep the great Paraiba do Sul safe\",\n      description:\n        \"This is a great oportunity to meed new people and have contact with the nature!\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Delivery of lunch boxes to homeless people\",\n      subtitle: \"We will not let them sleep hungry\",\n      description:\n        \"We are going to deliver food to the homeless in the Vila Santa Cecilia neighborhood\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Planting trees around the Contorno highway\",\n      subtitle: \"Let's make our city more beautiful and with a purer air\",\n      description:\n        \"Join us in this fun and important mission\"\n    },\n  ]\n};\n","import { AuthTypes } from \"./types\";\nimport initialState from \"../initialState\";\n\nconst INITIAL_STATE = initialState.auth;\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AuthTypes.SIGNIN:\n      const signedUser = state.usersList.find(\n        (user) => action.payload.email === user.email\n      );\n      return { ...state, currentUser: signedUser, isLogged: true };\n    case AuthTypes.SIGNUP:\n      return { ...state, usersList: [...state.usersList, action.payload] };\n    case AuthTypes.LOGOUT:\n      return { ...state, isLogged: false, currentUser: {} };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export const TasksTypes = {\n  ADD: \"tasks/ADD\",\n  DELETE: \"tasks/DELETE\"\n};\n","import { TasksTypes } from \"./types\";\nimport initialState from \"../initialState\";\n\nconst INITIAL_STATE = initialState.tasks;\n\nconst tasksReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TasksTypes.ADD:\n      return [...state, action.payload];\n    case TasksTypes.DELETE:\n      return state.filter( ({ id }) => id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n","export const EditTypes = {\n  EDIT: \"edit/EDIT\",\n};","import { EditTypes } from \"./types\";\nimport initialState from \"../initialState\";\n\nconst INITIAL_STATE = initialState.edit;\n\nconst editReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case EditTypes.EDIT:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default editReducer;","import { combineReducers } from \"redux\";\n\nimport auth from \"./auth\";\nimport tasks from \"./tasks\";\nimport edit from \"./edit\";\n\nexport default combineReducers({\n  auth,\n  tasks,\n  edit,\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./ducks/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header } from \"semantic-ui-react\";\n\nconst CustomHeader = ({ message }) => (\n  <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n    {message}\n  </Header>\n);\n\nCustomHeader.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default CustomHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Message } from \"semantic-ui-react\";\n\nconst CustomMessage = ({ children }) => <Message>{children}</Message>;\n\nCustomMessage.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default CustomMessage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nconst LoginForm = ({\n  formData: { email, password },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        fluid\n        icon=\"lock\"\n        value={email}\n        name=\"email\"\n        iconPosition=\"left\"\n        placeholder=\"E-mail address\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        fluid\n        icon=\"lock\"\n        name=\"password\"\n        value={password}\n        iconPosition=\"left\"\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(event) => onInputChange(event)}\n      />\n\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        Login\n      </Button>\n    </Segment>\n  </Form>\n);\n\nLoginForm.propTypes = {\n  formData: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport { Button, Menu, Container } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport default class NavBar extends Component {\n  handleItemClick = (e, { path }) => {\n    const { history } = this.props;\n    history.push(`/${path}`);\n  };\n\n  render() {\n    return (\n      <Menu color=\"blue\" size=\"massive\">\n        <Container text>\n          <Menu.Item path=\"home\" name=\"home\" onClick={this.handleItemClick}></Menu.Item>\n          <Menu.Item path=\"newProject\" name=\"Create a new project\" onClick={this.handleItemClick} />\n          <Menu.Item path=\"donation\" name=\"Make a donation\" onClick={this.handleItemClick} />\n          <Menu.Item path=\"contacts\" name=\"Your contact chain\" onClick={this.handleItemClick} />\n\n          <Menu.Menu position=\"right\">\n            <Menu.Item>\n              <Button path=\"chain\" onClick={this.handleItemClick} primary>\n                LogOut\n              </Button>\n            </Menu.Item>\n          </Menu.Menu>\n        </Container>\n      </Menu>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  onLogOut: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst SiginUpForm = ({\n  formData: { name, password, email },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        value={name}\n        name=\"name\"\n        fluid\n        placeholder=\"Name\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={email}\n        name=\"email\"\n        fluid\n        placeholder=\"E-mail address\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={password}\n        name=\"password\"\n        fluid\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        SignUp\n      </Button>\n    </Segment>\n  </Form>\n);\n\nSiginUpForm.propTypes = {\n  formData: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default SiginUpForm;\n","import { TasksTypes } from \"./types\";\n\nexport const addTask = (task) => ({\n  type: TasksTypes.ADD,\n  payload: task\n});\n\nexport const deleteTask = (id) => ({\n  type: TasksTypes.DELETE,\n  payload: id\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport * as tasksAction from \"../../store/ducks/tasks/actions\";\n/*\neditTask() {\n  console.log('clicked');\n  history.push('/carteira');\n}\n*/\nconst TaskCard = ({\n  task: { id, title, subtitle, description },\n  deleteTask,\n  // editTask,\n  ...props\n}) => (\n  <Card {...props}>\n    <Card.Content>\n      <Image\n        floated=\"right\"\n        size=\"mini\"\n        src=\"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\"\n      />\n      <Card.Header>{title}</Card.Header>\n      <Card.Meta>{subtitle}</Card.Meta>\n      <Card.Description>{description}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className=\"ui two buttons\">\n        <Button\n          basic\n          color=\"green\"\n          onClick={function () {\n            // eslint-disable-next-line no-restricted-globals\n            location.href = \"/edit\";\n        }}\n        >\n          Edit\n        </Button>\n        <Button onClick={() => deleteTask(id)} basic color=\"red\">\n          Delete\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n);\n\nTaskCard.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired,\n  deleteTask: PropTypes.func,\n  editTask: PropTypes.func,\n};\n\nconst mapDispatchToProps = {\n  deleteTask: tasksAction.deleteTask,\n  // editTask: tasksAction.editTask,\n};\n\n\nexport default connect(null, mapDispatchToProps)(TaskCard);\n","import React from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst TaskForm = ({\n  formData: { title, subtitle, description },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        value={title}\n        name=\"title\"\n        fluid\n        placeholder=\"title\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={subtitle}\n        name=\"subtitle\"\n        fluid\n        placeholder=\"Subtitle\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.TextArea\n        value={description}\n        name=\"description\"\n        placeholder=\"Description\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        Add new project\n      </Button>\n    </Segment>\n  </Form>\n);\n\nTaskForm.propTypes = {\n  formData: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default TaskForm;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport TaskCard from \"../TaskCard\";\n\nconst TaskGroup = ({ tasks }) => (\n  <Card.Group>\n    {tasks.map((task) => (\n      <TaskCard key={task.id} task={task} />\n    ))}\n  </Card.Group>\n);\n\nTaskGroup.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default TaskGroup;\n","import React from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst EditTaskForm = ({\n  formData: { title, subtitle, description },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        value={title}\n        name=\"title\"\n        fluid\n        placeholder=\"title\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={subtitle}\n        name=\"subtitle\"\n        fluid\n        placeholder=\"Subtitle\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.TextArea\n        value={description}\n        name=\"description\"\n        placeholder=\"Description\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        Edit the project\n      </Button>\n    </Segment>\n  </Form>\n);\n\nEditTaskForm.propTypes = {\n  formData: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default EditTaskForm;\n","import React, { Component } from \"react\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { TaskGroup } from \"../../components\";\n\nclass Home extends Component {\n  render() {\n    const {\n      tasks,\n      auth: {\n        currentUser: { name }\n      }\n    } = this.props;\n\n    return (\n      <Container fluid textAlign=\"justified\" style={{ width: 1000 }}>\n        <Header style={{ marginTop: 40 }} textAlign=\"center\" as=\"h2\">\n          <Icon name=\"tasks\" />\n          <Header.Content>{`${name}'s volunteer work`}</Header.Content>\n        </Header>\n        <TaskGroup tasks={tasks} />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { LoginForm, CustomHeader, CustomMessage } from \"../../components\";\nimport * as authAction from \"../../store/ducks/auth/actions\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const {\n      auth: { usersList },\n      signIn,\n      history\n    } = this.props;\n    const { email, password } = this.state;\n\n    const userAlreadyExists = usersList.some(\n      (user) => user.email === email && user.password === password\n    );\n\n    if (userAlreadyExists) {\n      const user = { email, password };\n      signIn(user);\n      history.push(\"/home\");\n    }\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <CustomHeader message=\"Connect with people who want make the world a better place to live!\" />\n          <LoginForm\n            formData={this.state}\n            onInputChange={this.handleInputChange}\n            onSubmit={this.handleSubmit}\n          />\n          <CustomMessage>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </CustomMessage>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  signIn: authAction.signIn\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { AuthTypes } from \"./types\";\n\nexport const signIn = (user) => ({\n  type: AuthTypes.SIGNIN,\n  payload: user\n});\n\nexport const signUp = (user) => ({\n  type: AuthTypes.SIGNUP,\n  payload: user\n});\n\nexport const logOut = () => ({\n  type: AuthTypes.LOGOUT\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { SignUpForm, CustomHeader, CustomMessage } from \"../../components\";\nimport * as authAction from \"../../store/ducks/auth/actions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const { signUp, history } = this.props;\n    const user = this.state;\n    signUp(user);\n    history.push(\"/chain\");\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <CustomHeader message=\"TrybeTasks\" />\n          <SignUpForm\n            formData={this.state}\n            onInputChange={this.handleInputChange}\n            onSubmit={this.handleSubmit}\n          />\n          <CustomMessage>\n            Already have an ancount? <Link to=\"/chain\">Sign In</Link>\n          </CustomMessage>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  signUp: authAction.signUp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\nimport { TaskForm, TaskCard } from \"../../components\";\nimport * as tasksAction from \"../../store/ducks/tasks/actions\";\n\nclass Tasks extends Component {\n  state = {\n    title: \"\",\n    subtitle: \"\",\n    description: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const { addTask, history } = this.props;\n    const task = { id: uuidv4(), ...this.state };\n    addTask(task);\n    history.push(\"/home\");\n  };\n\n  render() {\n    return (\n      <Container fluid textAlign=\"justified\" style={{ width: 1000 }}>\n        <Header style={{ marginTop: 40 }} textAlign=\"center\" as=\"h2\">\n          <Icon name=\"tasks\" />\n          <Header.Content>Add a new project</Header.Content>\n        </Header>\n        <TaskCard task={this.state} fluid />\n        <TaskForm\n          formData={this.state}\n          onInputChange={this.handleInputChange}\n          onSubmit={this.handleSubmit}\n        />\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addTask: tasksAction.addTask\n};\n\nexport default connect(null, mapDispatchToProps)(Tasks);\n","import React, { Component } from \"react\";\n\nclass Donation extends Component {\n  render () {\n    return (\n      <>\n        <h1>Donation page</h1>\n        <h3>On this page will be inplemented a test transaction through the Pagar.me API</h3> \n        <h4>Pagar.me documentation: <a href='https://docs.pagar.me/docs'>https://docs.pagar.me/docs</a></h4>\n        <h4>Pagar.me endpoint: <a href='https://api.pagar.me/1'>https://api.pagar.me/1</a></h4>\n      </>\n    )\n  }\n}\n\nexport default Donation;\n","import React, { Component } from \"react\";\nimport { Container, Header, Icon, Image, Button, Card, TaskCard } from \"semantic-ui-react\";\n\nclass Contacts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    users: [],\n    }\n    this.getUsers = this.getUsers.bind(this);\n    this.handleUserClick = this.handleUserClick.bind(this);\n  }\n  \n  componentDidMount() {\n    this.getUsers()\n  }\n\n  handleUserClick(login) {\n    const decision = window.confirm(\n      `You will be redirected to ${login}'s profile`,\n    )\n\n    if (decision) {\n      window.location.assign(`https://github.com/${login}`)\n    }\n  }\n\n  async getUsers() {\n    const BASE_API_URL = 'https://api.github.com';\n    const USER_ENDPOINT = '/users';\n    const USERS_PER_REQUEST = 12;\n    const FETCH_SINCE = Math.random() * 10000;\n\n    const endpoint = `${BASE_API_URL}${USER_ENDPOINT}?since=${FETCH_SINCE}&per_page=${USERS_PER_REQUEST}`;\n\n    const response = await fetch(endpoint);\n    const data = await response.json();\n\n    this.setState({ users: data })\n    console.log(this.state.users);\n  };\n\n  render() {\n    //const users = this.state;\n    return (\n      <>\n        <Header style={{ marginTop: 40 }} textAlign=\"center\" as=\"h2\">\n          <Icon name=\"tasks\" />\n          <Header.Content>In order to exemplify your contact chain we are fetching some Github users.</Header.Content>\n        </Header>\n        <Card.Group>\n        {this.state.users.map((user) => (\n          <Card key={user.id} task={user} >\n              <Card>\n                <Card.Content>\n                  <Image\n                    floated=\"right\"\n                    size=\"mini\"\n                    src={user.avatar_url}\n                  />\n                  <Card.Header>{user.login}</Card.Header>\n                </Card.Content>\n                <Card.Content extra>\n                  <div className=\"ui two buttons\">\n                    <Button onClick={ () => this.handleUserClick(user.login) } basic color=\"green\">\n                      {`Go to ${user.login}'s GitHub page`}\n                    </Button>\n                  </div>\n                </Card.Content>\n              </Card>\n          </Card>\n        ))}\n      </Card.Group>\n    </>\n    );\n  }\n}\n\nexport default Contacts;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\nimport { EditTaskForm, TaskCard } from \"../../components\";\nimport * as tasksAction from \"../../store/ducks/tasks/actions\";\n\nclass Edit extends Component {\n  state = {\n    title: \"\",\n    subtitle: \"\",\n    description: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const { addTask, history } = this.props;\n    const task = { id: uuidv4(), ...this.state };\n    addTask(task);\n    history.push(\"/home\");\n  };\n\n  render() {\n    return (\n      <Container fluid textAlign=\"justified\" style={{ width: 1000 }}>\n        <Header style={{ marginTop: 40 }} textAlign=\"center\" as=\"h2\">\n          <Icon name=\"tasks\" />\n          <Header.Content>Want to change some details of the project?</Header.Content>\n        </Header>\n        <TaskCard task={this.state} fluid />\n        <EditTaskForm\n          formData={this.state}\n          onInputChange={this.handleInputChange}\n          onSubmit={this.handleSubmit}\n        />\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addTask: tasksAction.addTask\n};\n\nexport default connect(null, mapDispatchToProps)(Edit);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { NavBar } from \"../components\";\nimport * as authAction from \"../store/ducks/auth/actions\";\n\nconst PrivateRoute = ({ component: Component, auth, logOut, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth.isLogged === true ? (\n          <>\n            <NavBar onLogOut={logOut} {...props} />\n            <Component {...props} />\n          </>\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  logOut: authAction.logOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Login, SignUp, Home, Tasks, Donation, Contacts, Edit } from \"../pages\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/chain\" component={Login} />\n      <Route path=\"/signup\" component={SignUp} />\n      <PrivateRoute isPrivate path=\"/home\" component={Home} />\n      <PrivateRoute isPrivate path=\"/newProject\" component={Tasks} />\n      <PrivateRoute isPrivate path=\"/donation\" component={Donation} />\n      <PrivateRoute isPrivate path=\"/contacts\" component={Contacts} />\n      <PrivateRoute isPrivate path=\"/edit\" component={Edit} />\n      <Route render={() => <h1>NOT FOUND</h1>} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return <Routes />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}