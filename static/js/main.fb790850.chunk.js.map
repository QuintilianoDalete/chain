{"version":3,"sources":["store/ducks/auth/types.js","store/ducks/initialState.js","store/ducks/auth/index.js","store/ducks/tasks/types.js","store/ducks/tasks/index.js","store/ducks/rootReducer.js","store/index.js","components/CustomHeader/index.js","components/CustomMessage/index.js","components/LoginForm/index.js","components/NavBar/index.js","components/SignUpForm/index.js","components/TaskCard/index.js","store/ducks/tasks/actions.js","components/TaskForm/index.js","components/TaskGroup/index.js","pages/Home/index.js","pages/Login/index.js","store/ducks/auth/actions.js","pages/SignUp/index.js","pages/Tasks/index.js","routes/PrivateRoute.js","routes/index.js","App.js","index.js"],"names":["AuthTypes","auth","usersList","name","email","password","currentUser","isLogged","tasks","id","uuidv4","title","subtitle","description","INITIAL_STATE","initialState","authReducer","state","action","type","signedUser","find","user","payload","TasksTypes","tasksReducer","newTasks","filter","combineReducers","store","createStore","rootReducer","CustomHeader","message","Header","as","color","textAlign","CustomMessage","children","Message","LoginForm","formData","onInputChange","onSubmit","Form","size","Segment","stacked","Input","fluid","icon","value","iconPosition","placeholder","onChange","event","Button","onClick","NavBar","handleItemClick","e","props","history","push","onLogOut","this","Menu","Container","text","Item","position","primary","Component","SiginUpForm","mapDispatchToProps","delete","connect","task","Card","Content","Image","floated","src","Meta","Description","extra","className","basic","TaskForm","TextArea","TaskGroup","Group","map","Home","style","width","marginTop","Icon","Login","handleInputChange","target","setState","handleSubmit","signIn","some","Grid","height","verticalAlign","Column","maxWidth","to","SignUp","signUp","SignUpForm","Tasks","addTask","logOut","component","rest","render","Routes","exact","path","isPrivate","App","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.fb790850.chunk.js","sourcesContent":["export const AuthTypes = {\n  SIGNIN: \"auth/SIGNIN\",\n  SIGNUP: \"auth/SIGNUP\",\n  LOGOUT: \"auth/LOGOUT\"\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport default {\n  auth: {\n    usersList: [\n      {\n        name: \"admin\",\n        email: \"admin@gmail.com\",\n        password: \"admin123\"\n      }\n    ],\n    currentUser: {},\n    isLogged: true\n  },\n  tasks: [\n    {\n      id: uuidv4(),\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    },\n    {\n      id: uuidv4(),\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    },\n    {\n      id: 8,\n      title: \"Testando um titilo\",\n      subtitle: \"testando um subtitulo\",\n      description:\n        \"essa é a descrição de uma task de teste para usarmos como mock\"\n    }\n  ]\n};\n","import { AuthTypes } from \"./types\";\nimport initialState from \"../initialState\";\n\nconst INITIAL_STATE = initialState.auth;\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AuthTypes.SIGNIN:\n      const signedUser = state.usersList.find(\n        (user) => action.payload.email === user.email\n      );\n      return { ...state, currentUser: signedUser, isLogged: true };\n    case AuthTypes.SIGNUP:\n      return { ...state, usersList: [...state.usersList, action.payload] };\n    case AuthTypes.LOGOUT:\n      return { ...state, isLogged: false, currentUser: {} };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export const TasksTypes = {\n  ADD: \"tasks/ADD\",\n  EDIT: \"tasks/EDIT\",\n  DELETE: \"tasks/DELETE\"\n};\n","import { TasksTypes } from \"./types\";\nimport initialState from \"../initialState\";\n\nconst INITIAL_STATE = initialState.tasks;\n\nconst tasksReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TasksTypes.ADD:\n      return [...state, action.payload];\n    case TasksTypes.DELETE:\n      const newTasks = state.filter(({ id }) => id !== action.payload);\n      return [...newTasks];\n    case TasksTypes.EDIT:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n","import { combineReducers } from \"redux\";\n\nimport auth from \"./auth\";\nimport tasks from \"./tasks\";\n\nexport default combineReducers({\n  auth,\n  tasks\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./ducks/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header } from \"semantic-ui-react\";\n\nconst CustomHeader = ({ message }) => (\n  <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n    {message}\n  </Header>\n);\n\nCustomHeader.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default CustomHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Message } from \"semantic-ui-react\";\n\nconst CustomMessage = ({ children }) => <Message>{children}</Message>;\n\nCustomMessage.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default CustomMessage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nconst LoginForm = ({\n  formData: { email, password },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        fluid\n        icon=\"lock\"\n        value={email}\n        name=\"email\"\n        iconPosition=\"left\"\n        placeholder=\"E-mail address\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        fluid\n        icon=\"lock\"\n        name=\"password\"\n        value={password}\n        iconPosition=\"left\"\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(event) => onInputChange(event)}\n      />\n\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        Login\n      </Button>\n    </Segment>\n  </Form>\n);\n\nLoginForm.propTypes = {\n  formData: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport { Button, Menu, Container } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport default class NavBar extends Component {\n  handleItemClick = (e, { name }) => {\n    const { history } = this.props;\n    history.push(`/${name}`);\n  };\n\n  render() {\n    const { onLogOut } = this.props;\n    return (\n      <Menu color=\"blue\" size=\"massive\">\n        <Container text>\n          <Menu.Item name=\"home\" onClick={this.handleItemClick}></Menu.Item>\n          <Menu.Item name=\"tasks\" onClick={this.handleItemClick} />\n\n          <Menu.Menu position=\"right\">\n            <Menu.Item>\n              <Button onClick={onLogOut} primary>\n                LogOut\n              </Button>\n            </Menu.Item>\n          </Menu.Menu>\n        </Container>\n      </Menu>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  onLogOut: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst SiginUpForm = ({\n  formData: { name, password, email },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        value={name}\n        name=\"name\"\n        fluid\n        placeholder=\"Name\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={email}\n        name=\"email\"\n        fluid\n        placeholder=\"E-mail address\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={password}\n        name=\"password\"\n        fluid\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        SignUp\n      </Button>\n    </Segment>\n  </Form>\n);\n\nSiginUpForm.propTypes = {\n  formData: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default SiginUpForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport * as tasksAction from \"../../store/ducks/tasks/actions\";\n\nconst TaskCard = ({ task: { title, subtitle, description }, ...props }) => (\n  <Card {...props}>\n    <Card.Content>\n      <Image\n        floated=\"right\"\n        size=\"mini\"\n        src=\"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\"\n      />\n      <Card.Header>{title}</Card.Header>\n      <Card.Meta>{subtitle}</Card.Meta>\n      <Card.Description>{description}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className=\"ui two buttons\">\n        <Button basic color=\"green\">\n          Edit\n        </Button>\n        <Button basic color=\"red\">\n          Delete\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n);\n\nTaskCard.propTypes = {\n  task: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = {\n  delete: tasksAction.deleteTask\n};\n\nexport default connect(null, mapDispatchToProps)(TaskCard);\n","import { TasksTypes } from \"./types\";\n\nexport const addTask = (task) => ({\n  type: TasksTypes.ADD,\n  payload: task\n});\n\nexport const editTasks = (id) => ({\n  type: TasksTypes.EDIT,\n  payload: id\n});\n\nexport const deleteTask = (id) => ({\n  type: TasksTypes.DELETE,\n  payload: id\n});\n","import React from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst TaskForm = ({\n  formData: { title, subtitle, description },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        value={title}\n        name=\"title\"\n        fluid\n        placeholder=\"title\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={subtitle}\n        name=\"subtitle\"\n        fluid\n        placeholder=\"Subtitle\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.TextArea\n        value={description}\n        name=\"description\"\n        placeholder=\"Description\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        Add Task\n      </Button>\n    </Segment>\n  </Form>\n);\n\nTaskForm.propTypes = {\n  formData: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default TaskForm;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport TaskCard from \"../TaskCard\";\n\nconst TaskGroup = ({ tasks }) => (\n  <Card.Group>\n    {tasks.map((task) => (\n      <TaskCard key={task.id} task={task} />\n    ))}\n  </Card.Group>\n);\n\nTaskGroup.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default TaskGroup;\n","import React, { Component } from \"react\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { TaskGroup } from \"../../components\";\n\nclass Home extends Component {\n  render() {\n    const {\n      tasks,\n      auth: {\n        currentUser: { name }\n      }\n    } = this.props;\n\n    return (\n      <Container fluid textAlign=\"justified\" style={{ width: 1000 }}>\n        <Header style={{ marginTop: 40 }} textAlign=\"center\" as=\"h2\">\n          <Icon name=\"tasks\" />\n          <Header.Content>{`${name}'s Tasks`}</Header.Content>\n        </Header>\n        <TaskGroup tasks={tasks} />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { LoginForm, CustomHeader, CustomMessage } from \"../../components\";\nimport * as authAction from \"../../store/ducks/auth/actions\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const {\n      auth: { usersList },\n      signIn,\n      history\n    } = this.props;\n    const { email, password } = this.state;\n\n    const userAlreadyExists = usersList.some(\n      (user) => user.email === email && user.password === password\n    );\n\n    if (userAlreadyExists) {\n      const user = { email, password };\n      signIn(user);\n      history.push(\"/home\");\n    }\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <CustomHeader message=\"TrybeTasks\" />\n          <LoginForm\n            formData={this.state}\n            onInputChange={this.handleInputChange}\n            onSubmit={this.handleSubmit}\n          />\n          <CustomMessage>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </CustomMessage>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  signIn: authAction.signIn\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { AuthTypes } from \"./types\";\n\nexport const signIn = (user) => ({\n  type: AuthTypes.SIGNIN,\n  payload: user\n});\n\nexport const signUp = (user) => ({\n  type: AuthTypes.SIGNUP,\n  payload: user\n});\n\nexport const logOut = () => ({\n  type: AuthTypes.LOGOUT\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { SignUpForm, CustomHeader, CustomMessage } from \"../../components\";\nimport * as authAction from \"../../store/ducks/auth/actions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const { signUp, history } = this.props;\n    const user = this.state;\n    signUp(user);\n    history.push(\"/chain\");\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <CustomHeader message=\"TrybeTasks\" />\n          <SignUpForm\n            formData={this.state}\n            onInputChange={this.handleInputChange}\n            onSubmit={this.handleSubmit}\n          />\n          <CustomMessage>\n            Already have an ancount? <Link to=\"/chain\">Sign In</Link>\n          </CustomMessage>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  signUp: authAction.signUp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\nimport { TaskForm, TaskCard } from \"../../components\";\nimport * as tasksAction from \"../../store/ducks/tasks/actions\";\n\nclass Tasks extends Component {\n  state = {\n    title: \"\",\n    subtitle: \"\",\n    description: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const { addTask, history } = this.props;\n    const task = { id: uuidv4(), ...this.state };\n    addTask(task);\n    history.push(\"/home\");\n  };\n\n  render() {\n    return (\n      <Container fluid textAlign=\"justified\" style={{ width: 1000 }}>\n        <Header style={{ marginTop: 40 }} textAlign=\"center\" as=\"h2\">\n          <Icon name=\"tasks\" />\n          <Header.Content>Adicionar Task</Header.Content>\n        </Header>\n        <TaskCard task={this.state} fluid />\n        <TaskForm\n          formData={this.state}\n          onInputChange={this.handleInputChange}\n          onSubmit={this.handleSubmit}\n        />\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addTask: tasksAction.addTask\n};\n\nexport default connect(null, mapDispatchToProps)(Tasks);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { NavBar } from \"../components\";\nimport * as authAction from \"../store/ducks/auth/actions\";\n\nconst PrivateRoute = ({ component: Component, auth, logOut, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth.isLogged === true ? (\n          <>\n            <NavBar onLogOut={logOut} {...props} />\n            <Component {...props} />\n          </>\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  logOut: authAction.logOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Login, SignUp, Home, Tasks } from \"../pages\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/chain\" component={Login} />\n      <Route path=\"/signup\" component={SignUp} />\n      <PrivateRoute isPrivate path=\"/home\" component={Home} />\n      <PrivateRoute isPrivate path=\"/tasks\" component={Tasks} />\n      <Route render={() => <h1>NOT FOUND</h1>} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return <Routes />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}