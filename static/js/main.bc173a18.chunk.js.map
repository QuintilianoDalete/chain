{"version":3,"sources":["store/ducks/auth/types.js","store/ducks/auth/index.js","store/ducks/initialState.js","store/ducks/rootReducer.js","store/index.js","store/ducks/auth/actions.js","pages/Home/index.js","components/CustomHeader/index.js","components/CustomMessage/index.js","components/LoginForm/index.js","components/NavBar/index.js","components/SignUpForm/index.js","pages/Login/index.js","pages/SignUp/index.js","routes/PrivateRoutes.js","pages/Tasks/index.js","routes/index.js","App.js","index.js"],"names":["AuthTypes","INITIAL_STATE","usersList","name","email","password","currentUser","inLogged","authReducer","state","action","type","signedUser","find","user","payload","isLogged","combineReducers","auth","store","createStore","rootReducer","logOut","Home","console","log","this","props","Component","mapDispatchToProps","onLogOut","authAction","connect","CustomHeader","message","Header","CustomMessage","children","Message","LoginForm","formData","onInputChange","onSubmit","Form","size","Segment","stacked","Input","fluid","icon","value","iconPosition","placeholder","onChange","event","Button","onClick","color","NavBar","handleItemClick","e","history","push","Menu","Container","text","Item","position","primary","SiginUpForm","onHandleSubmit","Login","handleInputChange","target","setState","handleSubmit","signIn","userAlreadyExists","some","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","as","to","SignUp","signUp","SignUpForm","component","rest","render","Routes","exact","path","App","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.bc173a18.chunk.js","sourcesContent":["export const AuthTypes = {\n  SIGNIN: 'auth/SIGNIN',\n  SIGNUP: 'auth/SIGNUP',\n  LOGOUT: 'auth/LOGOUT'\n};\n","import { AuthTypes } from './types';\nimport initialState from '../initialState';\n\nconst INITIAL_STATE = initialState.auth;\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AuthTypes.SIGNIN:\n      const signedUser = state.usersList.find(\n        (user) => action.payload.email === user.email\n      );\n      return { ...state, currentUser: signedUser, isLogged: true };\n    case AuthTypes.SIGNUP:\n      return { ...state, usersList: [...state.usersList, action.payload] };\n    case AuthTypes.LOGOUT:\n      return { ...state, isLogged: false, currentUser: {} };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export default {\n  auth: {\n    usersList: [\n      {\n        name: 'admin',\n        email: 'admin@gmail.com',\n        password: '123456'\n      }\n    ],\n    currentUser: {},\n    inLogged: true\n  }\n};","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n  auth\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./ducks/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { AuthTypes } from './types';\n\nexport const signIn = (user) => ({\n  type: AuthTypes.SIGNIN,\n  payload: user\n});\n\nexport const signUp = (user) => ({\n  type: AuthTypes.SIGNUP,\n  payload: user\n});\n\nexport const logOut = () => ({\n  type: AuthTypes.LOGOUT\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport * as authAction from \"../../store/ducks/auth/actions\";\n\n\nclass Home extends Component {\n  render(){\n    console.log(\"props\", this.props)\n    return(\n      <>\n        <h1>Home</h1>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogOut: authAction.logOut\n};\n\nexport default connect(null, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header } from \"semantic-ui-react\";\n\nconst CustomHeader = ({ message, ...props }) => (\n  <Header {...props}>{message}</Header>\n);\n\nCustomHeader.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default CustomHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Message } from \"semantic-ui-react\";\n\nconst CustomMessage = ({ children }) => <Message>{children}</Message>;\n\nCustomMessage.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default CustomMessage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nconst LoginForm = ({\n  formData: { email, password },\n  onInputChange,\n  onSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        fluid\n        icon=\"lock\"\n        value={email}\n        name=\"email\"\n        iconPosition=\"left\"\n        placeholder=\"E-mail address\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        fluid\n        icon=\"lock\"\n        name=\"password\"\n        value={password}\n        iconPosition=\"left\"\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(event) => onInputChange(event)}\n      />\n\n      <Button onClick={onSubmit} color=\"blue\" fluid size=\"large\">\n        Login\n      </Button>\n    </Segment>\n  </Form>\n);\n\nLoginForm.propTypes = {\n  formData: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport { Button, Menu, Container } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport default class NavBar extends Component {\n  handleItemClick = (e, { name }) => {\n    const { history } = this.props;\n    history.push(`/${name}`);\n  };\n\n  render() {\n    const { onLogOut } = this.props;\n    return (\n      <Menu color=\"blue\" size=\"massive\">\n        <Container text>\n          <Menu.Item name=\"home\" onClick={this.handleItemClick}></Menu.Item>\n          <Menu.Item name=\"tasks\" onClick={this.handleItemClick} />\n\n          <Menu.Menu position=\"right\">\n            <Menu.Item>\n              <Button onClick={onLogOut} primary>\n                LogOut\n              </Button>\n            </Menu.Item>\n          </Menu.Menu>\n        </Container>\n      </Menu>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  onLogOut: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst SiginUpForm = ({\n  formData: { name, password, email },\n  onInputChange,\n  onHandleSubmit\n}) => (\n  <Form size=\"large\">\n    <Segment stacked>\n      <Form.Input\n        value={name}\n        name=\"name\"\n        fluid\n        placeholder=\"Name\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={email}\n        name=\"email\"\n        fluid\n        placeholder=\"E-mail address\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Form.Input\n        value={password}\n        name=\"password\"\n        fluid\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(event) => onInputChange(event)}\n      />\n      <Button onClick={onHandleSubmit} color=\"blue\" fluid size=\"large\">\n        SignUp\n      </Button>\n    </Segment>\n  </Form>\n);\n\nSiginUpForm.propTypes = {\n  formData: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n  }).isRequired,\n  onInputChange: PropTypes.func.isRequired\n};\n\nexport default SiginUpForm;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { LoginForm, CustomHeader, CustomMessage } from \"../../components\";\nimport * as authAction from \"../../store/ducks/auth/actions\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const {\n      auth: { usersList },\n      signIn,\n      history\n    } = this.props;\n    const { email, password } = this.state;\n    const userAlreadyExists = usersList.some(\n      (user) => user.email === email && user.password === password\n    );\n\n    console.log(\"1\");\n\n    if (userAlreadyExists) {\n      const user = { email, password };\n      signIn(user);\n      history.push(\"/home\");\n    }\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <CustomHeader\n            as=\"h2\"\n            color=\"blue\"\n            textAlign=\"center\"\n            message=\"Welcome the Chain\"\n          />\n          <LoginForm\n            formData={this.state}\n            onInputChange={this.handleInputChange}\n            onSubmit={this.handleSubmit}\n          />\n          <CustomMessage>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </CustomMessage>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  signIn: authAction.signIn\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { CustomMessage, CustomHeader, SignUpForm } from \"../../components\";\nimport * as authAction from \"../../store/ducks/auth/actions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const { signUp, history } = this.props;\n    const user = this.state;\n    signUp(user);\n    history.push(\"/chain\");\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <CustomHeader\n            as=\"h2\"\n            color=\"blue\"\n            textAlign=\"center\"\n            message=\"Welcome the Chain\"\n          />\n          <SignUpForm\n            formData={this.state}\n            onInputChange={this.handleInputChange}\n            onHandleSubmit={this.handleSubmit}\n          />\n          <CustomMessage>\n            Already have an account? <Link to=\"/chain\">Sign In</Link>\n          </CustomMessage>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  signUp: authAction.signUp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavBar } from '../components';\nimport * as authAction from '../store/ducks/auth/actions';\n\nconst PrivateRoute = ({ component: Component, auth, logOut, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => \n        auth.isLogged ? (\n          <>\n            <NavBar onLogOut={logOut} {...props} />\n            <Component {...props} />\n          </>\n        ) : (\n          <Redirect to='/chain' />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStatetoProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = {\n  logOut: authAction.logOut\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(PrivateRoute);\n","import React, { Component } from 'react';\n\nclass Tasks extends Component {\n  render(){\n    console.log(\"props\", this.props)\n    return(\n      <>\n        <h1>Tasks</h1>\n      </>\n    );\n  }\n}\n\nexport default Tasks;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Home, Login, SignUp } from '../pages';\nimport PrivateRoute from './PrivateRoutes';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path='/chain' component={Login} />\n    <PrivateRoute path='/home' component={Home} /> \n    <Route path='/signup' component={SignUp} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './routes';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst App = () => (<Routes />);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store';\n\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}